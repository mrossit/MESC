1. Princípios de Design e Referências Retro
O design deve seguir uma estética retrô, resgatando elementos visuais dos sistemas operacionais Windows 95. Isso implica o uso de:

Paleta de cores com tons de cinza, azul, verde água e branco

Bordas duplas e sombreados para autonomia visual dos componentes

Tipografia sistemática, preferencialmente com fontes tipo “MS Sans Serif” ou similares

Ícones pixelados e botões com relevo ou efeito pressed/focused clássico

Espaciamento consistente para simular as margens generosas da época

Estímulo à clareza visual e acessibilidade

Para referência de estilos, consulte kits e frameworks como o Windows 95 UI Kit da Themesberg e os exemplos disponíveis no repositório 98.css, bem como técnicas de recriação desse visual em CSS puro24.

2. Centralização de Estilo com Variáveis CSS
Toda a paleta de cores, tamanhos de fonte, espaçamentos e efeitos visuais devem ser centralizados em variáveis CSS declaradas no escopo global (:root). Isso permite fácil customização, maior manutenção e padronização em todas as partes do sistema.

Exemplo de definição de variáveis CSS no arquivo style.css:

css
:root {
  --w95-bg: #c3c7cb;
  --w95-border-dark: #848484;
  --w95-border-light: #fff;
  --w95-border-highlight: #dfdfdf;
  --w95-blue: #0078d7;
  --w95-green: #22a070;
  --w95-button: #e4e4e4;
  --w95-button-active: #bababa;
  --w95-font-family: 'MS Sans Serif', Tahoma, Geneva, sans-serif;
  --w95-text: #222;
  --w95-header-height: 56px;
  --w95-footer-height: 60px;
  --w95-accent: #fcfcfc;
  --w95-shadow: 1px 1px 0px #fff, 2px 2px 0px #848484;
}
Justificativa: O uso de variáveis CSS facilita a aplicação de temas, ajustes dinâmicos e mantém coerência visual ao longo dos componentes68.

3. Estrutura HTML Semântica
3.1 HEADER (Topo Fixo)
Use as tags semânticas header e nav para estruturar o HEAD de acordo com HTML5 moderno:

html
<header class="w95-header" role="banner">
  <nav aria-label="Últimas Conexões">
    <div class="conexoes-bloco">
      <span class="titulo-bloco">Últimas Conexões:</span>
      <ul class="lista-conexoes">
        <!--
          Cada item a seguir é gerado dinamicamente.
          Exemplo para documentação:
        -->
        <li class="conexao-usuario" data-pid="PID_UNICO">
          <span class="user-nome">Nome do Usuário</span>
          <span class="user-pid">(PID: 12345678)</span>
          <a class="link-whatsapp" href="https://wa.me/5511999999999" target="_blank" aria-label="Conversar com Nome do Usuário no WhatsApp">
            <img src="whatsapp-icon-pixel.png" alt="Ícone do WhatsApp" />
          </a>
        </li>
        <!-- Mais usuários... -->
      </ul>
    </div>
  </nav>
</header>
3.2 Footer (Rodapé Fixo)
Utilize footer com um menu de botões organizados horizontalmente, cada botão pode ser <button> ou <a> conforme a rota seja interna ou externa. Para acessibilidade, utilize aria-label sempre que o texto do botão for só um ícone.

html
<footer class="w95-footer" role="contentinfo">
  <nav aria-label="Menu inferior">
    <ul class="footer-menu">
      <li><button class="footer-btn" aria-label="Início">HOME</button></li>
      <li><button class="footer-btn" aria-label="Escalas">ESCALAS</button></li>
      <li><button class="footer-btn" aria-label="Substituição">SUBSTITUIÇÃO</button></li>
      <li><button class="footer-btn" aria-label="Perfil">PERFIL</button></li>
    </ul>
  </nav>
</footer>
Nota: Use <ul> e <li> para garantir navegação acessível via teclado e facilitar utilização de leitores de tela1012.

4. Estilos CSS: Windows 95 e Visual Retro
Os estilos precisam simular bordas duplas, efeitos de relevo, paleta Windows 95 e responsividade, sempre utilizando as variáveis centralizadas.

4.1 HEADER
css
.w95-header {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: var(--w95-header-height);
  background: var(--w95-bg);
  color: var(--w95-text);
  font-family: var(--w95-font-family);
  border-bottom: 2px solid var(--w95-border-dark);
  box-shadow:
    0 2px 0 var(--w95-border-highlight),
    0 4px 8px rgba(0,0,0,0.10);
  z-index: 1000;
  display: flex;
  align-items: center;
  justify-content: center;
}

.conexoes-bloco {
  display: flex;
  align-items: center;
  background: var(--w95-accent);
  border: 2px solid var(--w95-border-dark);
  border-radius: 2px;
  padding: 5px 12px;
  box-shadow: 
    1px 1px 0 var(--w95-border-light), 
    2px 2px 0 var(--w95-border-dark);
}

.lista-conexoes {
  display: flex;
  align-items: center;
  list-style: none;
  margin: 0 0 0 12px;
  padding: 0;
  gap: 10px;
}

.conexao-usuario {
  background: var(--w95-button);
  border: 1.5px solid var(--w95-border-highlight);
  border-radius: 3px;
  display: flex;
  align-items: center;
  gap: 5px;
  padding: 2px 7px;
  box-shadow: 1px 1px 0 var(--w95-border-dark), 2px 2px 0 var(--w95-border-light);
}

.link-whatsapp img {
  width: 17px; height: 17px;
  vertical-align: middle;
  padding-left: 3px;
}
4.2 FOOTER
css
.w95-footer {
  position: fixed;
  bottom: 0;
  left: 0;
  width: 100%;
  height: var(--w95-footer-height);
  background: var(--w95-bg);
  border-top: 2px solid var(--w95-border-dark);
  box-shadow:
    0 -2px 0 var(--w95-border-highlight),
    0 -4px 8px rgba(0,0,0,0.07);
  z-index: 1000;
  display: flex;
  align-items: center;
  justify-content: center;
}

.footer-menu {
  display: flex;
  list-style: none;
  margin: 0;
  padding: 0;
  gap: 22px;
}

.footer-btn {
  font-family: var(--w95-font-family);
  font-size: 1rem;
  color: var(--w95-text);
  background: var(--w95-button);
  border: 2px outset var(--w95-border-dark);
  border-radius: 2px;
  box-shadow: 1px 1px 0 var(--w95-border-light), 2px 2px 0 var(--w95-border-dark);
  padding: 10px 24px;
  cursor: pointer;
  transition: background 0.15s, border 0.07s;
}

.footer-btn:active, .footer-btn:focus {
  background: var(--w95-button-active);
  border: 2px inset var(--w95-border-highlight);
  outline: none;
}

/* Ajuste o espaçamento automático entre botões, se necessário */
/* Responsividade tratada na próxima seção */
4.3 Visual e Interação Retro
Utilize border combinando outset e inset para buttons e blocos

box-shadow discreto para simular profundidade dos elementos

Exemplo de “neumorfismo” 1990s: combine cores claras e escuras para sugerir relevo, com “pressionado” e “solto”

Ícones de pixels, preferencialmente monocromáticos ou de baixa resolução

Referências: Veja exemplos desses efeitos em frameworks como 98.css, Windows 95 UI Kit e 95CSS2.

5. Layout Responsivo e Media Queries
Garantir que os menus HEADER e Rodapé tenham ótima aparência desde desktop até smartphones é fundamental. Utilize flexbox para alinhamento, e media queries para readequação de tamanhos, fontes e espaçamentos nos pontos de quebra.

Exemplo para MOBILE FIRST:
css
@media (max-width: 768px) {
  .w95-header {
    height: 48px;
    font-size: 0.95rem;
    padding: 0 4px;
  }
  .w95-footer {
    height: 56px;
  }
  .footer-btn {
    padding: 8px 12px;
    font-size: 0.95rem;
  }
  .conexoes-bloco {
    flex-direction: column;
    padding: 4px 6px;
  }
  .lista-conexoes {
    flex-wrap: wrap;
    gap: 6px;
  }
}
@media (max-width: 480px) {
  .w95-header,
  .w95-footer {
    font-size: 0.85rem;
    height: 44px;
  }
}
Botões aumentam área de toque (mínimo recomendado: 44x44px para acessibilidade mobile)

Uso de gap para separar bem os botões independentemente do viewport

Elementos podem ser empilhados verticalmente se necessário

6. Bloco “Últimas Conexões”: Integração e Comportamento
6.1 Estrutura e Atualização
O bloco “Últimas Conexões” deve mostrar em tempo real ou quase real todos os usuários atualmente online, com fallback para os que se conectaram recentemente

Deve ser alimentado por um array/objeto JSON vindo da API ou da store (estado local)

Exemplo de estrutura de dado para integração:

json
[
  {
    "nome": "João Silva",
    "pid": "a12b3c4d",
    "whatsapp": "5511999999999",
    "online": true,
    "ultimoAcesso": "2025-10-04T18:33:00Z"
  },
  ...
]
Exibição: Os usuários online vêm primeiro e ganhos visuais (ícone colorido, por exemplo), seguidos dos que estavam online há pouco tempo (exemplo: 10 min).

O PID precisa aparecer visível, ao lado do nome

O ícone do WhatsApp deve servir de call-to-action direto

6.2 Exemplo de Renderização Dinâmica (JS)
js
const usuariosConectados = [...]; // fetch ou state

function renderConexoes(lista) {
  const ul = document.querySelector('.lista-conexoes');
  ul.innerHTML = '';
  lista.forEach(u => {
    const li = document.createElement('li');
    li.className = 'conexao-usuario';
    li.dataset.pid = u.pid;
    li.innerHTML = `
      <span class="user-nome">${u.nome}</span>
      <span class="user-pid">(PID: ${u.pid})</span>
      <a class="link-whatsapp" href="https://wa.me/${u.whatsapp}" target="_blank" aria-label="Conversar com ${u.nome} no WhatsApp">
        <img src="whatsapp-icon-pixel.png" alt="WhatsApp" />
      </a>
    `;
    ul.appendChild(li);
  });
}
7. Geração e Uso de PID Únicos para Usuários
PID (Personal Identifier) é um identificador único para cada usuário, exibido sempre ao lado do nome. Use UUIDs (v4) para garantir unicidade conforme boas práticas16.

Geração em JavaScript
js
import { v4 as uuidv4 } from 'uuid';
// Ao criar usuário:
const pid = uuidv4();
Se não usar biblioteca externa:

js
function geraPID() {
  return 'xxxxxxxx'.replace(/[xy]/g, c => {
    let r = Math.random() * 16 | 0;
    return r.toString(16);
  });
}
O PID deve ser persistido e transmitido junto com os dados do usuário, sendo referência cruzada em rotas e comandos do sistema.

8. Integração de Link Direto para WhatsApp
O link para WhatsApp deve ser construído seguindo o padrão oficial, usando apenas números (com DDI e DDD) – sem espaços ou traços:

html
<a href="https://wa.me/5511999999999" target="_blank" aria-label="Conversar com João Silva no WhatsApp">
  <img src="whatsapp-icon-pixel.png" alt="WhatsApp" />
</a>
Caso deseje adicionar mensagem automática: https://wa.me/5511999999999?text=Olá+João+Silva

O botão deve ser visualmente consistente com o retro design e ter feedback visual ao passar o mouse ou receber foco

Referências: Implementações no Canal TI, Bruno DevX e Tech Invest Financial18.

9. Acessibilidade e Contraste WCAG
9.1 Contraste
Use checadores como WebAIM Contrast Checker ou Formatador para garantir contraste mínimo de 4.5:1 entre texto e background, ampliando para 7:1 nos casos AAA. Botões, blocos de conexão e textos precisam ser testados.

9.2 Navegação por Teclado
Todos os botões e links devem ser acessíveis por TAB

Destaque visual no foco (focus) para cada elemento interativo

Use aria-label, role e marcas semânticas sempre que apropriado

Tamanho mínimo dos botões no mobile: 44x44px

9.3 Marcação
Utilize sempre <header>, <footer>, <nav>, <ul>, <li>, <a>, <button> para garantir semântica e compatibilidade com leitores de tela

Atributos aria-label e textos alternativos claros para ícones e links

Boas práticas: Veja a documentação da WAI/WCAG2123.

10. Exemplos de Código e Blocos Prontos
A seguir, veja um exemplo de código unificado para ilustrar a integração dos conceitos descritos:

html
<!-- HEADER RETRÔ FIXO -->
<header class="w95-header" role="banner">
  <nav aria-label="Últimas Conexões">
    <div class="conexoes-bloco">
      <span class="titulo-bloco">Últimas Conexões:</span>
      <ul class="lista-conexoes">
        <li class="conexao-usuario" data-pid="a12b3c4d">
          <span class="user-nome">João Silva</span>
          <span class="user-pid">(PID: a12b3c4d)</span>
          <a class="link-whatsapp" href="https://wa.me/5511999999999" target="_blank" aria-label="Conversar com João Silva no WhatsApp">
            <img src="whatsapp-icon-pixel.png" alt="WhatsApp" />
          </a>
        </li>
        <li class="conexao-usuario" data-pid="b98jk5ty">
          <span class="user-nome">Maria Luz</span>
          <span class="user-pid">(PID: b98jk5ty)</span>
          <a class="link-whatsapp" href="https://wa.me/5511998888888" target="_blank" aria-label="Conversar com Maria Luz no WhatsApp">
            <img src="whatsapp-icon-pixel.png" alt="WhatsApp" />
          </a>
        </li>
        <!-- Outros usuários -->
      </ul>
    </div>
  </nav>
</header>

<!-- CONTEÚDO PRINCIPAL AQUI -->
<main> ... </main>

<!-- MENU INFERIOR RETRÔ FIXO -->
<footer class="w95-footer" role="contentinfo">
  <nav aria-label="Menu inferior">
    <ul class="footer-menu">
      <li><button class="footer-btn" aria-label="Início">HOME</button></li>
      <li><button class="footer-btn" aria-label="Escalas">ESCALAS</button></li>
      <li><button class="footer-btn" aria-label="Substituição">SUBSTITUIÇÃO</button></li>
      <li><button class="footer-btn" aria-label="Perfil">PERFIL</button></li>
    </ul>
  </nav>
</footer>
Os estilos CSS são centralizados, baseados em variáveis, conforme apresentado na seção 4.

O layout é totalmente responsivo, preparado para media queries e acessível

Se possível, inclua no início do seu CSS um bloco reset para garantir uniformidade entre navegadores

11. Explicação dos Componentes
HEADER

Fixo no topo com position: fixed; top: 0; width: 100%

Bloco “Últimas Conexões” centralizado, com nome do usuário, PID e botão WhatsApp

Estilo Windows 95, com borda dupla/sombras, fonte “old school”

Lista flexível e horizontal de usuários (rolável se exceder a largura)

RODAPÉ

Fixo no rodapé com position: fixed; bottom: 0; width: 100%

Botões com espaçamento interno e externo, simulando botões de janela Windows 95

Estrutura semântica para acessibilidade de navegadores/leitores de tela

Estilo e feedback visual ao interagir (hover, active, focus) mantendo o visual retrô sempre

Responsividade

Espaçamento sempre consistente usando gap e padding definidos via variáveis

Itens ajustados para empilhar ou diminuir caso a tela seja pequena

Acessibilidade

Contraste de cores garantido, navegação por teclado fluída, elementos focáveis, títulos e labels explícitos

Integração de Dados

Usuários são alimentados via back-end, store ou API, sempre com PID único e telefone válido, além do nome

Botão do WhatsApp formatado para web ou celular (uso do “wa.me”)

Observações Finais e Checklist para Claude
Checklist para implementação no Claude:

Estruturar HEAD e FOOTER usando HTML semântico (<header>, <nav>, <footer>, <ul>, <li>, <button>)

Foco total no tema retrô Windows 95: cores em variáveis CSS globais (:root)

HEADER fixo no topo contendo bloco “Últimas Conexões”, exibe usuários online/recentes, com nome, PID (UUID) e link WhatsApp (pixel art)

FOOTER fixo no rodapé, com botões HOME, ESCALAS, SUBSTITUIÇÃO, PERFIL, visual e espaçamento retrô, responsivo

Layout adaptável via flexbox + media queries para dispositivos móveis/desktop

Componentes totalmente acessíveis: contraste (WCAG), navegação por teclado, leitura por leitores de tela (aria-label)

CSS estruturado separadamente, usando exclusivamente variáveis centralizadas

Comportamento esperado: menus sempre visíveis, HEADER e FOOTER não se sobrepõem ao conteúdo, responsividade em telas pequenas

Exemplos de HTML e CSS prontos, facilmente adaptáveis pelo Claude

Explicação comentada de cada parte do código fornecido

Sugestão de feedback visual retrô (hover, pressed) para todos os botões

Pronto para integração fácil com back-end e frameworks modernos (React, Vue, etc.), mas sem dependências de bibliotecas externas na parte visual principal