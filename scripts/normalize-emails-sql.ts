#!/usr/bin/env tsx
/**
 * VERS√ÉO ALTERNATIVA - Normaliza√ß√£o usando SQL DIRETO
 * Use este script se o normalize-emails.ts n√£o funcionar
 * 
 * Uso: tsx scripts/normalize-emails-sql.ts
 */

import { db } from '../server/db';
import { sql } from 'drizzle-orm';

async function normalizeEmailsSQL() {
  console.log('üîÑ Iniciando normaliza√ß√£o de emails via SQL...\n');
  
  try {
    // M√âTODO 1: Atualiza√ß√£o direta com SQL
    console.log('üìù Executando: UPDATE users SET email = LOWER(TRIM(email))...\n');
    
    const result = await db.execute(sql`
      UPDATE users 
      SET 
        email = LOWER(TRIM(email)),
        updated_at = NOW()
      WHERE email != LOWER(TRIM(email))
      RETURNING id, email, name
    `);

    console.log('‚úÖ Normaliza√ß√£o conclu√≠da!\n');
    console.log('üìä Resultado:', result);
    
    // Verifica√ß√£o
    const check = await db.execute(sql`
      SELECT COUNT(*) as total,
             SUM(CASE WHEN email = LOWER(email) THEN 1 ELSE 0 END) as normalized,
             SUM(CASE WHEN email != LOWER(email) THEN 1 ELSE 0 END) as remaining
      FROM users
    `);
    
    console.log('\nüìä Verifica√ß√£o final:', check.rows?.[0]);
    console.log('\n‚úÖ Todos os emails devem estar normalizados agora!\n');

  } catch (error: any) {
    console.error('‚ùå Erro ao normalizar emails:', error.message);
    console.error('Stack:', error.stack);
    process.exit(1);
  }

  process.exit(0);
}

// Executa o script
normalizeEmailsSQL();
