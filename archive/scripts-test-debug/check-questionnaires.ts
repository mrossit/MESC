import { db } from '../server/db';
import { questionnaires } from '@shared/schema';

async function checkQuestionnaires() {
  try {
    console.log('üîç Verificando question√°rios no banco de dados...\n');

    const allQuestionnaires = await db.select().from(questionnaires);

    if (allQuestionnaires.length === 0) {
      console.log('‚ö†Ô∏è Nenhum question√°rio encontrado no banco de dados');
      return;
    }

    allQuestionnaires.forEach((q, index) => {
      console.log(`\nüìã Question√°rio ${index + 1}:`);
      console.log('- ID:', q.id);
      console.log('- T√≠tulo:', q.title);
      console.log('- Descri√ß√£o:', q.description);
      console.log('- M√™s/Ano:', `${q.month}/${q.year}`);
      console.log('- Status:', q.status);
      console.log('- Total de perguntas:', q.questions.length);

      console.log('\nüìù Perguntas:');
      q.questions.forEach((question: any, qIndex: number) => {
        console.log(`\n  Pergunta ${qIndex + 1}:`);
        console.log(`  - ID: ${question.id}`);
        console.log(`  - Tipo: ${question.type}`);
        console.log(`  - Texto: ${question.question || question.text}`);
        console.log(`  - Obrigat√≥ria: ${question.required ? 'Sim' : 'N√£o'}`);

        if (question.options) {
          console.log(`  - Op√ß√µes: ${question.options.join(', ')}`);
        }

        if (question.condition) {
          console.log(`  - Condi√ß√£o: Depende da pergunta ${question.condition.questionId} = ${question.condition.value}`);
        }
      });

      console.log('\n' + '='.repeat(60));
    });

    // Verificar se h√° o question√°rio padr√£o com todas as perguntas
    console.log('\n\nüîé AN√ÅLISE DO PROBLEMA:');
    const currentMonth = new Date().getMonth() + 1;
    const currentYear = new Date().getFullYear();

    const currentQuestionnaire = allQuestionnaires.find(
      q => q.month === currentMonth && q.year === currentYear
    );

    if (currentQuestionnaire) {
      const questionsCount = currentQuestionnaire.questions.length;
      console.log(`\n‚úÖ Question√°rio do m√™s atual encontrado`);
      console.log(`‚ö†Ô∏è  Problema identificado: Apenas ${questionsCount} perguntas (deveria ter 10)`);

      if (questionsCount < 10) {
        console.log('\nüìå Perguntas que parecem estar faltando:');
        console.log('- Pergunta sobre casamento (condicional)');
        console.log('- Pergunta sobre disponibilidade para substitui√ß√µes');
        console.log('- Pergunta sobre missas di√°rias');
        console.log('- Pergunta sobre eventos especiais');
        console.log('- Outras perguntas relevantes');
      }
    } else {
      console.log('‚ùå Nenhum question√°rio encontrado para o m√™s atual');
    }

  } catch (error) {
    console.error('‚ùå Erro ao verificar question√°rios:', error);
  }

  process.exit(0);
}

checkQuestionnaires();